<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lyf.sandbox.dao.ProjectEnvMapper">
  <resultMap id="BaseResultMap" type="com.lyf.sandbox.domain.ProjectEnv">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="env_name" jdbcType="VARCHAR" property="envName" />
    <result column="api_domain" jdbcType="VARCHAR" property="apiDomain" />
    <result column="api_ip" jdbcType="VARCHAR" property="apiIp" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="project_id" jdbcType="BIGINT" property="projectId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, env_name, api_domain, api_ip, create_date, is_deleted, project_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from project_env
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from project_env
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lyf.sandbox.domain.ProjectEnv">
    insert into project_env (id, env_name, api_domain, 
      api_ip, create_date, is_deleted, 
      project_id)
    values (#{id,jdbcType=BIGINT}, #{envName,jdbcType=VARCHAR}, #{apiDomain,jdbcType=VARCHAR}, 
      #{apiIp,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=BIT}, 
      #{projectId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.lyf.sandbox.domain.ProjectEnv">
    insert into project_env
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="envName != null">
        env_name,
      </if>
      <if test="apiDomain != null">
        api_domain,
      </if>
      <if test="apiIp != null">
        api_ip,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="envName != null">
        #{envName,jdbcType=VARCHAR},
      </if>
      <if test="apiDomain != null">
        #{apiDomain,jdbcType=VARCHAR},
      </if>
      <if test="apiIp != null">
        #{apiIp,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lyf.sandbox.domain.ProjectEnv">
    update project_env
    <set>
      <if test="envName != null">
        env_name = #{envName,jdbcType=VARCHAR},
      </if>
      <if test="apiDomain != null">
        api_domain = #{apiDomain,jdbcType=VARCHAR},
      </if>
      <if test="apiIp != null">
        api_ip = #{apiIp,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lyf.sandbox.domain.ProjectEnv">
    update project_env
    set env_name = #{envName,jdbcType=VARCHAR},
      api_domain = #{apiDomain,jdbcType=VARCHAR},
      api_ip = #{apiIp,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=BIT},
      project_id = #{projectId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>